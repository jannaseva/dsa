#include <stdio.h>
#include <stdlib.h>
#define SIZE 10
int stack[SIZE], top = -1;

void push(int item) {
    if (top == SIZE - 1)
        printf("\nThe stack is overflow");
    else
        stack[++top] = item;
}

int pop() {
    if (top == -1) {
        printf("\nThe stack is underflow");
        return -1; 
    } else {
        return stack[top--];
    }
}

void display() {
    if (top == -1)
        printf("\nThe stack is empty");
    else {
        printf("\nThe stack elements are:");
        for (int i = top; i >= 0; i--)
            printf("%d\t", stack[i]);
    }
}

void checkPalindrome() {
    int num, temp, remainder, reversedNumber = 0;
    printf("\nEnter a number to check if it is a palindrome: ");
    scanf("%d", &num);
    temp = num;
    while (temp != 0) {
        remainder = temp % 10;
        reversedNumber = reversedNumber * 10 + remainder;
        push(remainder);
        temp /= 10;
    }
    if (num == reversedNumber)
        printf("\nThe number is a palindrome.");
    else
        printf("\nThe number is not a palindrome.");
}

int main() {
    int choice, item;
    while (1) {
        printf("\n\n1. Push");
        printf("\n2. Pop");
        printf("\n3. Display");
        printf("\n4. Check Palindrome");
        printf("\n5. Exit");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1:
                printf("\nEnter the element to push: ");
                scanf("%d", &item);
                push(item);
                break;
            case 2:
                item = pop();
                if (item != -1)
                    printf("\nThe popped element is %d", item);
                break;
            case 3:
                display();
                break;
            case 4:
                checkPalindrome();
                break;
            case 5:
                exit(0);
            default:
                printf("\nInvalid choice");
        }
    }
    return 0;
}
